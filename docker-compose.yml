services:
  db:
    image: postgres:latest
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: mrswt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork
  
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:80"  # Accesezi frontend-ul pe http://localhost:4200
    depends_on:
      - mrstw.api
    networks:
      - mynetwork

  mrstw.api:
    image: mrstw.api
    build:
      context: .
      dockerfile: MRSTW.Api/Dockerfile
    container_name: mrstw_api
    depends_on:
      - db
      - rabbitmq
    environment:
#      server: "db"
#      port: "5432"
#      database: "mrstw"
#      username: "postgres"
#      password: "postgres"
      DB_CONNECTION_STRING: "Host=postgres;Port=5432;Database=mrstw;Username=postgres;Password=postgres;Pooling=true"
#      RabbitMQ__Host=rabbitmq
#              - ConnectionStrings__PostgreSQL=Host=db;Port=5432;Database=mydb;Username=admin;Password=admin
    ports:
      - "8080:8080"
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  pgdata:
