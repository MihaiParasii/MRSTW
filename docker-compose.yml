services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - mynetwork

  backend:
    build:
      context: .
      dockerfile: MRSTW.Api/Dockerfile
    container_name: backend
    environment:
      - DB_CONNECTION_STRING=Host=postgresql;Port=5432;Database=mrstw;Username=postgres;Password=postgres;Pooling=true
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - mynetwork

  db:
    image: postgres:latest
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: mrstw
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - ./.containers/mrstw:/var/lib/postgresql/data
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  pgdata: